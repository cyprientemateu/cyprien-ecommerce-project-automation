pipeline {
    agent any
    environment {
        DOCKER_CREDENTIALS_ID = 'tcc-docker-hub'
        GITHUB_CREDENTIALS_ID = 'tcc-github-access'
    }
    options {
        buildDiscarder(logRotator(numToKeepStr: '5'))
        disableConcurrentBuilds()
        timeout(time: 60, unit: 'MINUTES')
        timestamps()
    }
    stages {
        stage('Setup parameters') {
            steps {
                script {
                    properties([
                        parameters([
                            string(
                                defaultValue: 'main',
                                name: 'BRANCH_NAME',
                                description: 'Enter branch to deploy the apps',
                                trim: true
                            )
                        ])
                    ])
                }
            }
        }

        stage('Docker Login') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'tcc-docker-hub', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASSWORD')]) {
                    sh 'echo $DOCKER_PASSWORD | docker login -u $DOCKER_USER --password-stdin'
                }
            }
        }

        stage('UI build and push') {
            steps {
                sh '''
                rm -rf cyprien-ecommerce-project || true
                git clone -b ${BRANCH_NAME} https://github.com/cyprientemateu/cyprien-ecommerce-project.git
                cd ${WORKSPACE}/cyprien-ecommerce-project/do-it-yourself/src/ui
                docker build -t cyprientemateu/a1cyprien_do_it_yourself_ui:${BUILD_NUMBER} .
                docker push cyprientemateu/a1cyprien_do_it_yourself_ui:${BUILD_NUMBER}
                '''
            }
        }

        stage('ORDERS build and push') {
            steps {
                sh '''
                rm -rf cyprien-ecommerce-project || true
                git clone -b ${BRANCH_NAME} https://github.com/cyprientemateu/cyprien-ecommerce-project.git
                cd ${WORKSPACE}/cyprien-ecommerce-project/do-it-yourself/src/orders
                docker build -t cyprientemateu/a1cyprien_do_it_yourself_orders:${BUILD_NUMBER} .
                docker build -t cyprientemateu/a1cyprien_do_it_yourself_orders:${BUILD_NUMBER} . -f Dockerfile-db
                docker build -t cyprientemateu/a1cyprien_do_it_yourself_orders_db_rabbitmq:${BUILD_NUMBER} . -f Dockerfile-rabbit-mq               
                docker push cyprientemateu/a1cyprien_do_it_yourself_orders:${BUILD_NUMBER}
                docker push cyprientemateu/a1cyprien_do_it_yourself_orders_db:${BUILD_NUMBER}
                docker push cyprientemateu/a1cyprien_do_it_yourself_orders_db_rabbitmq:${BUILD_NUMBER}
                '''
            }
        }

        stage('CHECKOUT build and push') {
            steps {
                sh '''
                rm -rf cyprien-ecommerce-project || true
                git clone -b ${BRANCH_NAME} https://github.com/cyprientemateu/cyprien-ecommerce-project.git
                cd ${WORKSPACE}/cyprien-ecommerce-project/do-it-yourself/src/checkout
                docker build -t cyprientemateu/a1cyprien_do_it_yourself_checkout:${BUILD_NUMBER} .
                docker build -t cyprientemateu/a1cyprien_do_it_yourself_checkout_db:${BUILD_NUMBER} . -f Dockerfile-db
                docker push cyprientemateu/a1cyprien_do_it_yourself_checkout:${BUILD_NUMBER}
                docker push cyprientemateu/a1cyprien_do_it_yourself_checkout_db:${BUILD_NUMBER}
                '''
            }
        }

        stage('CATALOG build and push') {
            steps {
                sh '''
                rm -rf cyprien-ecommerce-project || true
                git clone -b ${BRANCH_NAME} https://github.com/cyprientemateu/cyprien-ecommerce-project.git
                cd ${WORKSPACE}/cyprien-ecommerce-project/do-it-yourself/src/catalog
                docker build -t cyprientemateu/a1cyprien_do_it_yourself_catalog:${BUILD_NUMBER} .
                docker build -t cyprientemateu/a1cyprien_do_it_yourself_catalog_db:${BUILD_NUMBER} . -f Dockerfile-db
                docker push cyprientemateu/a1cyprien_do_it_yourself_catalog:${BUILD_NUMBER}
                docker push cyprientemateu/a1cyprien_do_it_yourself_catalog_db:${BUILD_NUMBER}
                '''
            }
        }

        stage('CART build and push') {
            steps {
                sh '''
                rm -rf cyprien-ecommerce-project || true
                git clone -b ${BRANCH_NAME} https://github.com/cyprientemateu/cyprien-ecommerce-project.git
                cd ${WORKSPACE}/cyprien-ecommerce-project/do-it-yourself/src/cart
                docker build -t cyprientemateu/a1cyprien_do_it_yourself_cart:${BUILD_NUMBER} .
                docker build -t cyprientemateu/a1cyprien_do_it_yourself_cart_dynamodb:${BUILD_NUMBER} . -f Dockerfile-dynamodb 
                docker push cyprientemateu/a1cyprien_do_it_yourself_cart:${BUILD_NUMBER}
                docker push cyprientemateu/a1cyprien_do_it_yourself_cart_dynamodb:${BUILD_NUMBER}
                '''
            }
        }

        stage('ASSETS build and push') {
            steps {
                sh '''
                rm -rf cyprien-ecommerce-project || true
                git clone -b ${BRANCH_NAME} https://github.com/cyprientemateu/cyprien-ecommerce-project.git
                cd ${WORKSPACE}/cyprien-ecommerce-project/do-it-yourself/src/assets
                docker build -t cyprientemateu/a1cyprien_do_it_yourself_assets:${BUILD_NUMBER} .
                docker push cyprientemateu/a1cyprien_do_it_yourself_assets:${BUILD_NUMBER}
                '''
            }
        }

         stage('Trigger Deployment') {
            steps {
                withCredentials([string(credentialsId: 'tcc-github-access', variable: 'GITHUB_TOKEN')]) {
                    sh '''
                    TAG=${BUILD_NUMBER}
                    rm -rf cyprien-ecommerce-project-automation || true
                    git clone https://cyprientemateu:${GITHUB_TOKEN}@github.com/cyprientemateu/cyprien-ecommerce-project-automation.git  
                    cd cyprien-ecommerce-project-automation/chart
                    yq eval '.ui.tag = "'"$TAG"'"' -i branch-values.yaml
                    yq eval '.catalog.tag = "'"$TAG"'"' -i branch-values.yaml
                    yq eval '.catalog_db.tag = "'"$TAG"'"' -i branch-values.yaml
                    yq eval '.checkout.tag = "'"$TAG"'"' -i branch-values.yaml
                    yq eval '.checkout_db.tag = "'"$TAG"'"' -i branch-values.yaml
                    yq eval '.orders.tag = "'"$TAG"'"' -i branch-values.yaml
                    yq eval '.orders_db.tag = "'"$TAG"'"' -i branch-values.yaml
                    yq eval '.orders_db_rabbitmq.tag = "'"$TAG"'"' -i branch-values.yaml
                    yq eval '.cart.tag = "'"$TAG"'"' -i branch-values.yaml
                    yq eval '.cart_dynamodb.tag = "'"$TAG"'"' -i branch-values.yaml
                    yq eval '.assets.tag = "'"$TAG"'"' -i branch-values.yaml

                    git config --global user.name "cyprientemateu"
                    git config --global user.email cyprien.temateu@yahoo.com

                    git add -A
                    if git diff-index --quiet HEAD; then
                        echo "No changes to commit"
                    else
                        git commit -m "updating APPS to ${BUILD_NUMBER}"
                        git push origin main
                    fi
                    '''
                }
            }
        }
    }

    post {
        success {
            slackSend(channel: '#development-alerts', color: 'good', message: "SUCCESSFUL: Application cyprien-ecommerce-project '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")
        }
        unstable {
            slackSend(channel: '#development-alerts', color: 'warning', message: "UNSTABLE: Application cyprien-ecommerce-project \n Action : Please check the console output to fix this job IMMEDIATELY \n '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")
        }
        failure {
            slackSend(channel: '#development-alerts', color: '#FF0000', message: "FAILURE: Application cyprien-ecommerce-project \n Action : Please check the console output to fix this job IMMEDIATELY \n '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")
        }
        cleanup {
            deleteDir()
        }
    }
}
